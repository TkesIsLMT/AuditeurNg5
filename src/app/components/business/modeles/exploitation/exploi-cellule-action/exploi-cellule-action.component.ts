import { Component, OnInit, Input } from '@angular/core';
import { ElementBase } from '../../element-base';
import { NgbModal } from '@ng-bootstrap/ng-bootstrap';
import { ExploiCelluleCommentaireComponent } from '../exploi-cellule-commentaire/exploi-cellule-commentaire.component';
import { ElementService } from '../../element.service';
import { ValeurInspection } from '../valeur-inspection';

@Component({
  selector: 'app-exploi-cellule-action',
  templateUrl: './exploi-cellule-action.component.html',
  styleUrls: ['./exploi-cellule-action.component.css']
})
export class ExploiCelluleActionComponent implements OnInit {
  @Input() element: ElementBase
  @Input() valInspect:ValeurInspection;

  constructor(private eleSrv:ElementService, private modalSrv:NgbModal) { }

  ngOnInit() {
    this.valInspect = this.valInspect || new ValeurInspection();
  }

  openATL(){
    alert('in work !');
    this.valInspect.CodeATL = 1; // pour simuler pour le design
  }

  hasCommentaire(){
    return this.valInspect.Commentaire;
  }
  hasLienATL(){
    return this.valInspect.CodeATL > 0;
  }

  openCommentaire() {
    const mdForm = this.modalSrv.open(ExploiCelluleCommentaireComponent);
    mdForm.componentInstance.titre = "Commentaire sur " + this.eleSrv.getIntituleElement(this.element);
    mdForm.componentInstance.currentCommentaire = this.valInspect.Commentaire;
    mdForm.result.then(x =>{
      this.valInspect.Commentaire = x;
    }, ()=>{/*rien Ã  faire si l'utilisateur annule !*/});
  }

  get title(){
    return this.valInspect.Commentaire ? this.valInspect.Commentaire : 'Ajouter un commentaire'
  }
}
