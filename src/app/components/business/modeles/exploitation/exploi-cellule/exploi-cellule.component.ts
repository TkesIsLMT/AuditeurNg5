import { Component, Input, OnInit } from '@angular/core';
import { ElementBase } from '../../element-base';
import { ElementService } from '../../element.service';
import { NgbModal } from '@ng-bootstrap/ng-bootstrap';
import { ExploiCelluleCommentaireComponent } from '../exploi-cellule-commentaire/exploi-cellule-commentaire.component';
import { PointDetail } from '../../../points/point-detail';
import { Observable } from 'rxjs/Observable';
import { map, tap, takeWhile } from 'rxjs/operators';
import * as _ from 'lodash';

@Component({
  selector: 'app-exploi-cellule',
  templateUrl: './exploi-cellule.component.html',
  styleUrls: ['./exploi-cellule.component.css'],
})
export class ExploiCelluleComponent implements OnInit {
  @Input() element:ElementBase;
  hasPoint:boolean = false;
  pointControle: PointDetail = new PointDetail();
  private currentCommentaire:string;
  private currentATL = false;
  private currentValue;

  constructor(private eleSrv:ElementService, private modalSrv:NgbModal) {
    
  }

  ngOnInit(): void {
    this.eleSrv.pointsDisponible.data.subscribe(res=> {
      let pc = _.find(res, ['Id',this.element.PointControleId])
      this.hasPoint = !_.isNil(pc);
      if (this.hasPoint){
        this.pointControle = pc;
      }
    });
  }

  private getResumeCellule() {
    let s:string = '';
    if (this.element.Libelle){
      s = this.element.Libelle;
    } else if (this.element.PointControle){
      s = this.element.PointControle.Libelle;
    } else {
      s = "";
    }
    return s;
  }

  openATL(){
    this.currentATL = !this.currentATL;
  }

  openCommentaire() {
    const mdForm = this.modalSrv.open(ExploiCelluleCommentaireComponent);
    mdForm.componentInstance.titre = "Commentaire sur " + this.getResumeCellule();
    mdForm.componentInstance.currentCommentaire = this.currentCommentaire;
    mdForm.result.then(x =>{
      this.currentCommentaire = x;
    }, ()=>{/*rien Ã  faire si l'utilisateur annule !*/});
  }

  private manageClick(off:boolean)
  {
    if (_.isUndefined(this.currentValue))
      this.currentValue = off;
    this.currentValue = !this.currentValue;
  }
  clickOn(){
    this.manageClick(false);
  }
  clickOff(){
    this.manageClick(true);
  }
}
