import { Component, Input, OnInit, OnDestroy, ElementRef, Renderer2 } from '@angular/core';
import { ElementBase } from '../../element-base';
import { ISubscription } from 'rxjs/Subscription';
import { ElementService } from '../../element.service';

@Component({
  selector: 'app-exploi-element-base',
  templateUrl: './exploi-element-base.component.html',
  styleUrls: ['./exploi-element-base.component.css']
})
export class ExploiElementBaseComponent implements OnInit, OnDestroy {
  @Input() element:ElementBase;

  private activeSub:ISubscription;
  
  constructor(private elRef:ElementRef, private eleSrv:ElementService, private renderer:Renderer2) { 

  }

  ngOnInit(): void {
    // this.activeSub = this.eleSrv.activeElement$.subscribe(res=>{
    //   const active = this.element.Id === res.Id;
    //   const action = active ? 'addClass':'removeClass';
    //   this.renderer[action](this.elRef.nativeElement,'active-element');
    // });
  }
  ngOnDestroy(): void {
    // this.activeSub.unsubscribe();
  }
  
  // onClick(event){
  //   event.stopPropagation();
  //   this.eleSrv.activateElement(this.element);
  // }
}
